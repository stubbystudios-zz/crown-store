{"ast":null,"code":"var _jsxFileName = \"/Users/cbest/indeed/udemy/crown-clothing/src/components/SignIn/SignIn.jsx\";\nimport React from 'react';\nimport './SignIn.scss';\nimport { connect } from 'react-redux';\nimport FormInput from '../FormInput/FormInput';\nimport CustomButton from '../CustomButton/CustomButton';\nimport { signInWithGoogle, auth } from '../../firebase/firebase.utils';\nimport { googleSignInStart } from '../../redux/user/user.actions';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleSubmit = async event => {\n      event.preventDefault();\n      const {\n        email,\n        password\n      } = this.state;\n\n      try {\n        await auth.signInWithEmailAndPassword(email, password);\n        this.setState({\n          email: '',\n          password: ''\n        });\n      } catch (error) {\n        console.log('Error', error);\n      }\n    };\n\n    this.handleChange = e => {\n      const {\n        value,\n        name\n      } = e.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.state = {\n      email: '',\n      password: ''\n    };\n  }\n\n  render() {\n    const {\n      googleSignInStart\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"section\", {\n      className: \"sign-in\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, \"I already have an account\"), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }\n    }, \"Sign in with your email and password\"), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FormInput, {\n      name: \"email\",\n      type: \"email\",\n      label: \"Email\",\n      value: this.state.email,\n      handleChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(FormInput, {\n      name: \"password\",\n      type: \"password\",\n      label: \"Password\",\n      value: this.state.password,\n      handleChange: this.handleChange,\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"footer\", {\n      className: \"sign-in-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"submit\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    }, \"Sign in\"), /*#__PURE__*/React.createElement(CustomButton, {\n      type: \"button\",\n      onClick: signInWithGoogle,\n      isGoogleSignIn: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }, '', \"Sign in with Google\", ''))));\n  }\n\n}\n\n;\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart())\n});\n\nexport default connect(null, mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/cbest/indeed/udemy/crown-clothing/src/components/SignIn/SignIn.jsx"],"names":["React","connect","FormInput","CustomButton","signInWithGoogle","auth","googleSignInStart","SignIn","Component","constructor","props","handleSubmit","event","preventDefault","email","password","state","signInWithEmailAndPassword","setState","error","console","log","handleChange","e","value","name","target","render","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './SignIn.scss';\nimport { connect } from 'react-redux';\nimport FormInput from '../FormInput/FormInput';\nimport CustomButton from '../CustomButton/CustomButton';\nimport { signInWithGoogle, auth } from '../../firebase/firebase.utils';\nimport { googleSignInStart } from '../../redux/user/user.actions';\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      email: '',\n      password: ''\n    }\n  }\n\n  handleSubmit = async event => {\n    event.preventDefault();\n\n    const { email, password } = this.state;\n\n    try {\n      await auth.signInWithEmailAndPassword(email, password);\n      this.setState({ email: '', password: '' });\n    } catch (error) {\n      console.log('Error', error);\n    }\n  }\n\n  handleChange = e => {\n    const { value, name } = e.target;\n\n    this.setState({ [name]: value })\n  }\n\n  render() {\n    const { googleSignInStart } = this.props;\n    return (\n      <section className='sign-in'>\n        <h2>I already have an account</h2>\n        <p>Sign in with your email and password</p>\n\n        <form onSubmit={this.handleSubmit}>\n          <FormInput\n            name='email'\n            type='email'\n            label='Email'\n            value={this.state.email}\n            handleChange={this.handleChange}\n            required\n          />\n          <FormInput\n            name='password'\n            type='password'\n            label='Password'\n            value={this.state.password}\n            handleChange={this.handleChange}\n            required\n          />\n          <footer className='sign-in-footer'>\n            <CustomButton type='submit'>Sign in</CustomButton>\n            <CustomButton type='button' onClick={signInWithGoogle} isGoogleSignIn>\n              {''}\n            Sign in with Google{''}\n            </CustomButton>\n          </footer>\n        </form>\n      </section>\n    )\n  }\n};\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart())\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(SignIn);"]},"metadata":{},"sourceType":"module"}