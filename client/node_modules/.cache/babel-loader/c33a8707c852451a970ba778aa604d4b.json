{"ast":null,"code":"var _jsxFileName = \"/Users/cbest/indeed/udemy/crown-clothing/src/pages/CollectionPage/CollectionPage.jsx\";\nimport React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { selectCollection } from '../../redux/shop/shop.selectors';\nimport CollectionItem from '../../components/CollectionItem/CollectionItem';\nimport { CollectionPageContainer, CollectionTitle, CollectionItemsContainer } from './CollectionPage.styles';\nimport { firestore } from '../../firebase/firebase.utils';\n\nconst CollectionPage = ({\n  collection\n}) => {\n  useEffect(() => {\n    console.log('i am subscribing');\n    const unsubscribeFromCollections = firestore.collection('collections').onSnapshot(snapshot => console.log('THE SNAPSHOT', snapshot));\n    return () => {\n      console.log('i am unsubscribing');\n      unsubscribeFromCollections();\n    };\n  }, []);\n  const {\n    title,\n    items\n  } = collection;\n  return /*#__PURE__*/React.createElement(CollectionPageContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CollectionTitle, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, title), /*#__PURE__*/React.createElement(CollectionItemsContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, items.map(item => /*#__PURE__*/React.createElement(CollectionItem, {\n    key: item.id,\n    item: item,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }\n  }))));\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  collection: selectCollection(ownProps.match.params.collectionId)(state)\n});\n\nexport default connect(mapStateToProps)(CollectionPage);","map":{"version":3,"sources":["/Users/cbest/indeed/udemy/crown-clothing/src/pages/CollectionPage/CollectionPage.jsx"],"names":["React","useEffect","connect","selectCollection","CollectionItem","CollectionPageContainer","CollectionTitle","CollectionItemsContainer","firestore","CollectionPage","collection","console","log","unsubscribeFromCollections","onSnapshot","snapshot","title","items","map","item","id","mapStateToProps","state","ownProps","match","params","collectionId"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,iCAAjC;AAEA,OAAOC,cAAP,MAA2B,gDAA3B;AAEA,SACEC,uBADF,EAEEC,eAFF,EAGEC,wBAHF,QAIO,yBAJP;AAKA,SAASC,SAAT,QAA0B,+BAA1B;;AAEA,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAoB;AACzCT,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACA,UAAMC,0BAA0B,GAAGL,SAAS,CAACE,UAAV,CAAqB,aAArB,EAAoCI,UAApC,CAA+CC,QAAQ,IAAIJ,OAAO,CAACC,GAAR,CAAY,cAAZ,EAA4BG,QAA5B,CAA3D,CAAnC;AACA,WAAO,MAAM;AACXJ,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACAC,MAAAA,0BAA0B;AAC3B,KAHD;AAID,GAPQ,EAON,EAPM,CAAT;AASA,QAAM;AAAEG,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAmBP,UAAzB;AACA,sBACE,oBAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkBM,KAAlB,CADF,eAEE,oBAAC,wBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGC,KAAK,CAACC,GAAN,CAAUC,IAAI,iBACb,oBAAC,cAAD;AAAgB,IAAA,GAAG,EAAEA,IAAI,CAACC,EAA1B;AAA8B,IAAA,IAAI,EAAED,IAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,CADH,CAFF,CADF;AAUD,CArBD;;AAuBA,MAAME,eAAe,GAAG,CAACC,KAAD,EAAQC,QAAR,MAAsB;AAC5Cb,EAAAA,UAAU,EAAEP,gBAAgB,CAACoB,QAAQ,CAACC,KAAT,CAAeC,MAAf,CAAsBC,YAAvB,CAAhB,CAAqDJ,KAArD;AADgC,CAAtB,CAAxB;;AAIA,eAAepB,OAAO,CACpBmB,eADoB,CAAP,CAEbZ,cAFa,CAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { connect } from 'react-redux';\nimport { selectCollection } from '../../redux/shop/shop.selectors';\n\nimport CollectionItem from '../../components/CollectionItem/CollectionItem';\n\nimport {\n  CollectionPageContainer,\n  CollectionTitle,\n  CollectionItemsContainer\n} from './CollectionPage.styles';\nimport { firestore } from '../../firebase/firebase.utils';\n\nconst CollectionPage = ({ collection }) => {\n  useEffect(() => {\n    console.log('i am subscribing');\n    const unsubscribeFromCollections = firestore.collection('collections').onSnapshot(snapshot => console.log('THE SNAPSHOT', snapshot));\n    return () => {\n      console.log('i am unsubscribing');\n      unsubscribeFromCollections();\n    }\n  }, []);\n\n  const { title, items } = collection;\n  return (\n    <CollectionPageContainer>\n      <CollectionTitle>{title}</CollectionTitle>\n      <CollectionItemsContainer>\n        {items.map(item => (\n          <CollectionItem key={item.id} item={item} />\n        ))}\n      </CollectionItemsContainer>\n    </CollectionPageContainer>\n  );\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  collection: selectCollection(ownProps.match.params.collectionId)(state)\n});\n\nexport default connect(\n  mapStateToProps\n)(CollectionPage);\n"]},"metadata":{},"sourceType":"module"}