{"ast":null,"code":"import _defineProperty from\"/Users/cbest/indeed/udemy/crown-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/cbest/indeed/udemy/crown-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Users/cbest/indeed/udemy/crown-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/cbest/indeed/udemy/crown-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/cbest/indeed/udemy/crown-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import'./SignUp.scss';import{connect}from'react-redux';import{signUpStart as _signUpStart}from'../../redux/user/user.actions';import FormInput from'../FormInput/FormInput';import CustomButton from'../CustomButton/CustomButton';var SignUp=function SignUp(_ref){var signUpStart=_ref.signUpStart;var _useState=useState({displayName:'',email:'',password:'',confirmPassword:''}),_useState2=_slicedToArray(_useState,2),signUpCredentials=_useState2[0],setSignUpCredentials=_useState2[1];var displayName=signUpCredentials.displayName,email=signUpCredentials.email,password=signUpCredentials.password,confirmPassword=signUpCredentials.confirmPassword;var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();if(!(password!==confirmPassword)){_context.next=4;break;}alert(\"Passwords do not match!\");return _context.abrupt(\"return\");case 4:signUpStart({displayName:displayName,email:email,password:password});case 5:case\"end\":return _context.stop();}}},_callee);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();var handleChange=function handleChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;setSignUpCredentials(_objectSpread(_objectSpread({},signUpCredentials),{},_defineProperty({},name,value)));};return/*#__PURE__*/React.createElement(\"section\",{className:\"sign-up\"},/*#__PURE__*/React.createElement(\"h2\",{className:\"title\"},\"I do not have an account\"),/*#__PURE__*/React.createElement(\"p\",null,\"Sign up with your email and password\"),/*#__PURE__*/React.createElement(\"form\",{className:\"sign-up-form\",onSubmit:handleSubmit},/*#__PURE__*/React.createElement(\"fieldset\",null,/*#__PURE__*/React.createElement(FormInput,{type:\"text\",name:\"displayName\",value:displayName,onChange:handleChange,label:\"Display Name\",required:true}),/*#__PURE__*/React.createElement(FormInput,{type:\"email\",name:\"email\",value:email,onChange:handleChange,label:\"Emails\",required:true}),/*#__PURE__*/React.createElement(FormInput,{type:\"password\",name:\"password\",value:password,onChange:handleChange,label:\"Password\",required:true}),/*#__PURE__*/React.createElement(FormInput,{type:\"password\",name:\"confirmPassword\",value:confirmPassword,onChange:handleChange,label:\"Confirm Password\",required:true}),/*#__PURE__*/React.createElement(CustomButton,{type:\"submit\"},\"Sign up\"))));};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{signUpStart:function signUpStart(userCredentials){return dispatch(_signUpStart(userCredentials));}};};export default connect(null,mapDispatchToProps)(SignUp);","map":{"version":3,"sources":["/Users/cbest/indeed/udemy/crown-clothing/client/src/components/SignUp/SignUp.jsx"],"names":["React","useState","connect","signUpStart","FormInput","CustomButton","SignUp","displayName","email","password","confirmPassword","signUpCredentials","setSignUpCredentials","handleSubmit","event","preventDefault","alert","handleChange","target","name","value","mapDispatchToProps","dispatch","userCredentials"],"mappings":"4zBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAO,eAAP,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,OAASC,WAAW,GAAXA,CAAAA,YAAT,KAA4B,+BAA5B,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,8BAAzB,CAEA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAAqB,IAAlBH,CAAAA,WAAkB,MAAlBA,WAAkB,eACgBF,QAAQ,CAAC,CACzDM,WAAW,CAAE,EAD4C,CAEzDC,KAAK,CAAE,EAFkD,CAGzDC,QAAQ,CAAE,EAH+C,CAIzDC,eAAe,CAAE,EAJwC,CAAD,CADxB,wCAC3BC,iBAD2B,eACRC,oBADQ,kBAQ1BL,CAAAA,WAR0B,CAQwBI,iBARxB,CAQ1BJ,WAR0B,CAQbC,KARa,CAQwBG,iBARxB,CAQbH,KARa,CAQNC,QARM,CAQwBE,iBARxB,CAQNF,QARM,CAQIC,eARJ,CAQwBC,iBARxB,CAQID,eARJ,CAUlC,GAAMG,CAAAA,YAAY,2FAAG,iBAAMC,KAAN,kHACnBA,KAAK,CAACC,cAAN,GADmB,KAGfN,QAAQ,GAAKC,eAHE,0BAIjBM,KAAK,CAAC,yBAAD,CAAL,CAJiB,wCAQnBb,WAAW,CAAC,CAAEI,WAAW,CAAXA,WAAF,CAAeC,KAAK,CAALA,KAAf,CAAsBC,QAAQ,CAARA,QAAtB,CAAD,CAAX,CARmB,sDAAH,kBAAZI,CAAAA,YAAY,6CAAlB,CAWA,GAAMI,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAH,KAAK,CAAI,mBACJA,KAAK,CAACI,MADF,CACpBC,IADoB,eACpBA,IADoB,CACdC,KADc,eACdA,KADc,CAG5BR,oBAAoB,gCAAMD,iBAAN,wBAA0BQ,IAA1B,CAAiCC,KAAjC,GAApB,CACD,CAJD,CAMA,mBACE,+BAAS,SAAS,CAAC,SAAnB,eACE,0BAAI,SAAS,CAAC,OAAd,6BADF,cAEE,oEAFF,cAGE,4BAAM,SAAS,CAAC,cAAhB,CAA+B,QAAQ,CAAEP,YAAzC,eACE,iDACE,oBAAC,SAAD,EACE,IAAI,CAAC,MADP,CAEE,IAAI,CAAC,aAFP,CAGE,KAAK,CAAEN,WAHT,CAIE,QAAQ,CAAEU,YAJZ,CAKE,KAAK,CAAC,cALR,CAME,QAAQ,KANV,EADF,cASE,oBAAC,SAAD,EACE,IAAI,CAAC,OADP,CAEE,IAAI,CAAC,OAFP,CAGE,KAAK,CAAET,KAHT,CAIE,QAAQ,CAAES,YAJZ,CAKE,KAAK,CAAC,QALR,CAME,QAAQ,KANV,EATF,cAiBE,oBAAC,SAAD,EACE,IAAI,CAAC,UADP,CAEE,IAAI,CAAC,UAFP,CAGE,KAAK,CAAER,QAHT,CAIE,QAAQ,CAAEQ,YAJZ,CAKE,KAAK,CAAC,UALR,CAME,QAAQ,KANV,EAjBF,cAyBE,oBAAC,SAAD,EACE,IAAI,CAAC,UADP,CAEE,IAAI,CAAC,iBAFP,CAGE,KAAK,CAAEP,eAHT,CAIE,QAAQ,CAAEO,YAJZ,CAKE,KAAK,CAAC,kBALR,CAME,QAAQ,KANV,EAzBF,cAiCE,oBAAC,YAAD,EAAc,IAAI,CAAC,QAAnB,YAjCF,CADF,CAHF,CADF,CA2CD,CAtED,CAwEA,GAAMI,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,QAAK,CACtCnB,WAAW,CAAE,qBAAAoB,eAAe,QAC1BD,CAAAA,QAAQ,CAACnB,YAAW,CAACoB,eAAD,CAAZ,CADkB,EADU,CAAL,EAAnC,CAKA,cAAerB,CAAAA,OAAO,CACpB,IADoB,CAEpBmB,kBAFoB,CAAP,CAGbf,MAHa,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport './SignUp.scss';\nimport { connect } from 'react-redux';\nimport { signUpStart } from '../../redux/user/user.actions';\nimport FormInput from '../FormInput/FormInput';\nimport CustomButton from '../CustomButton/CustomButton';\n\nconst SignUp = ({ signUpStart }) => {\n  const [signUpCredentials, setSignUpCredentials] = useState({\n    displayName: '',\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n\n  const { displayName, email, password, confirmPassword } = signUpCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    if (password !== confirmPassword) {\n      alert(\"Passwords do not match!\");\n      return;\n    }\n\n    signUpStart({ displayName, email, password });\n  };\n\n  const handleChange = event => {\n    const { name, value } = event.target;\n\n    setSignUpCredentials({ ...signUpCredentials, [name]: value });\n  }\n\n  return (\n    <section className=\"sign-up\" >\n      <h2 className='title'>I do not have an account</h2>\n      <p>Sign up with your email and password</p>\n      <form className='sign-up-form' onSubmit={handleSubmit}>\n        <fieldset>\n          <FormInput\n            type='text'\n            name='displayName'\n            value={displayName}\n            onChange={handleChange}\n            label='Display Name'\n            required\n          />\n          <FormInput\n            type='email'\n            name='email'\n            value={email}\n            onChange={handleChange}\n            label='Emails'\n            required\n          />\n          <FormInput\n            type='password'\n            name='password'\n            value={password}\n            onChange={handleChange}\n            label='Password'\n            required\n          />\n          <FormInput\n            type='password'\n            name='confirmPassword'\n            value={confirmPassword}\n            onChange={handleChange}\n            label='Confirm Password'\n            required\n          />\n          <CustomButton type='submit'>Sign up</CustomButton>\n        </fieldset>\n      </form>\n    </section>\n  )\n}\n\nconst mapDispatchToProps = dispatch => ({\n  signUpStart: userCredentials =>\n    dispatch(signUpStart(userCredentials))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(SignUp);"]},"metadata":{},"sourceType":"module"}