{"ast":null,"code":"import _regeneratorRuntime from\"/Users/cbest/indeed/udemy/crown-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";var _marked=/*#__PURE__*/_regeneratorRuntime.mark(fetchCollectionsAsync),_marked2=/*#__PURE__*/_regeneratorRuntime.mark(fetchCollectionsStart),_marked3=/*#__PURE__*/_regeneratorRuntime.mark(shopSagas);import{takeLatest,all,call,put}from'redux-saga/effects';import{firestore,convertCollectionsSnapshotToMap}from'../../firebase/firebase.utils';import{fetchCollectionsSuccess,fetchCollectionsFailure}from'./shop.actions';import ShopActionTypes from'./shop.types';// \"All generator functions must have yields in them.\" \n// – video 182, Redux Saga, 5:30 mark\nexport function fetchCollectionsAsync(){var collectionRef,snapshot,collectionsMap;return _regeneratorRuntime.wrap(function fetchCollectionsAsync$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return console.log('I am firing!');case 2:_context.prev=2;collectionRef=firestore.collection('collections');_context.next=6;return collectionRef.get();case 6:snapshot=_context.sent;_context.next=9;return call(convertCollectionsSnapshotToMap,snapshot);case 9:collectionsMap=_context.sent;_context.next=12;return put(fetchCollectionsSuccess(collectionsMap));case 12:_context.next=18;break;case 14:_context.prev=14;_context.t0=_context[\"catch\"](2);_context.next=18;return put(fetchCollectionsFailure(_context.t0.message));case 18:case\"end\":return _context.stop();}}},_marked,null,[[2,14]]);}export function fetchCollectionsStart(){return _regeneratorRuntime.wrap(function fetchCollectionsStart$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START,fetchCollectionsAsync);case 2:case\"end\":return _context2.stop();}}},_marked2);}export function shopSagas(){return _regeneratorRuntime.wrap(function shopSagas$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return all([call(fetchCollectionsStart)]);case 2:case\"end\":return _context3.stop();}}},_marked3);}","map":{"version":3,"sources":["/Users/cbest/indeed/udemy/crown-clothing/client/src/redux/shop/shop.saga.js"],"names":["fetchCollectionsAsync","fetchCollectionsStart","shopSagas","takeLatest","all","call","put","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","console","log","collectionRef","collection","get","snapshot","collectionsMap","message","FETCH_COLLECTIONS_START"],"mappings":"+MAgBiBA,qB,iDAiBAC,qB,iDAOAC,S,EAxCjB,OAASC,UAAT,CAAqBC,GAArB,CAA0BC,IAA1B,CAAgCC,GAAhC,KAA2C,oBAA3C,CAEA,OACEC,SADF,CAEEC,+BAFF,KAGO,+BAHP,CAKA,OACEC,uBADF,CAEEC,uBAFF,KAGO,gBAHP,CAKA,MAAOC,CAAAA,eAAP,KAA4B,cAA5B,CAEA;AACA;AACA,MAAO,SAAUX,CAAAA,qBAAV,2LACL,MAAMY,CAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ,CAAN,CADK,uBAIGC,aAJH,CAImBP,SAAS,CAACQ,UAAV,CAAqB,aAArB,CAJnB,iBAKc,MAAMD,CAAAA,aAAa,CAACE,GAAd,EAAN,CALd,OAKGC,QALH,+BAOD,MAAMZ,CAAAA,IAAI,CACRG,+BADQ,CAERS,QAFQ,CAAV,CAPC,OAMGC,cANH,gCAWH,MAAMZ,CAAAA,GAAG,CAACG,uBAAuB,CAACS,cAAD,CAAxB,CAAT,CAXG,0GAaH,MAAMZ,CAAAA,GAAG,CAACI,uBAAuB,CAAC,YAAMS,OAAP,CAAxB,CAAT,CAbG,qEAiBP,MAAO,SAAUlB,CAAAA,qBAAV,qJACL,MAAME,CAAAA,UAAU,CACdQ,eAAe,CAACS,uBADF,CAEdpB,qBAFc,CAAhB,CADK,wDAOP,MAAO,SAAUE,CAAAA,SAAV,yIACL,MAAME,CAAAA,GAAG,CAAC,CACRC,IAAI,CAACJ,qBAAD,CADI,CAAD,CAAT,CADK","sourcesContent":["import { takeLatest, all, call, put } from 'redux-saga/effects';\n\nimport {\n  firestore,\n  convertCollectionsSnapshotToMap\n} from '../../firebase/firebase.utils';\n\nimport {\n  fetchCollectionsSuccess,\n  fetchCollectionsFailure\n} from './shop.actions';\n\nimport ShopActionTypes from './shop.types';\n\n// \"All generator functions must have yields in them.\" \n// – video 182, Redux Saga, 5:30 mark\nexport function* fetchCollectionsAsync() {\n  yield console.log('I am firing!');\n\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap =\n      yield call(\n        convertCollectionsSnapshotToMap,\n        snapshot\n      );\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  }\n}\n\nexport function* fetchCollectionsStart() {\n  yield takeLatest(\n    ShopActionTypes.FETCH_COLLECTIONS_START,\n    fetchCollectionsAsync\n  );\n}\n\nexport function* shopSagas() {\n  yield all([\n    call(fetchCollectionsStart)\n  ])\n}"]},"metadata":{},"sourceType":"module"}