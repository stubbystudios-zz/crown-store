{"ast":null,"code":"var _jsxFileName = \"/Users/cbest/indeed/udemy/crown-clothing/client/src/components/CartDropdown/CartDropdown.jsx\";\nimport React from 'react';\nimport './CartDropdown.scss';\nimport { connect } from 'react-redux';\nimport CustomButton from '../CustomButton/CustomButton';\nimport CartItem from '../CartItem/CartItem';\nimport { withRouter } from 'react-router-dom';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\n\nconst CartDropdown = ({\n  cartItems,\n  history,\n  dispatch\n}) => /*#__PURE__*/React.createElement(\"section\", {\n  className: \"cart-dropdown\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 3\n  }\n}, /*#__PURE__*/React.createElement(\"ul\", {\n  className: \"cart-items\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }\n}, cartItems.length ? cartItems.map(cartItem => /*#__PURE__*/React.createElement(CartItem, {\n  key: cartItem.id,\n  item: cartItem,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 41\n  }\n})) : /*#__PURE__*/React.createElement(\"p\", {\n  className: \"empty-message\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 14\n  }\n}, \"Your cart is empty.\")), /*#__PURE__*/React.createElement(CustomButton, {\n  onClick: () => {\n    history.push('/checkout');\n    dispatch(toggleCartHidden());\n  },\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }\n}, \"Go to checkout\"));\n\nconst mapStateToProps = state => ({\n  cartItems: selectCartItems(state)\n});\n\nexport default withRouter(connect(mapStateToProps)(CartDropdown));","map":{"version":3,"sources":["/Users/cbest/indeed/udemy/crown-clothing/client/src/components/CartDropdown/CartDropdown.jsx"],"names":["React","connect","CustomButton","CartItem","withRouter","selectCartItems","toggleCartHidden","CartDropdown","cartItems","history","dispatch","length","map","cartItem","id","push","mapStateToProps","state"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,qBAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AACA,OAAOC,QAAP,MAAqB,sBAArB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AACA,SAASC,eAAT,QAAgC,iCAAhC;AACA,SAASC,gBAAT,QAAiC,+BAAjC;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,OAAb;AAAsBC,EAAAA;AAAtB,CAAD,kBACnB;AAAS,EAAA,SAAS,EAAC,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE;AAAI,EAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEIF,SAAS,CAACG,MAAV,GACKH,SAAS,CAACI,GAAV,CAAcC,QAAQ,iBAAK,oBAAC,QAAD;AAAU,EAAA,GAAG,EAAEA,QAAQ,CAACC,EAAxB;AAA4B,EAAA,IAAI,EAAED,QAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAA3B,CADL,gBAEK;AAAG,EAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAJT,CADF,eAQE,oBAAC,YAAD;AAAc,EAAA,OAAO,EAAE,MAAM;AAC3BJ,IAAAA,OAAO,CAACM,IAAR,CAAa,WAAb;AACAL,IAAAA,QAAQ,CAACJ,gBAAgB,EAAjB,CAAR;AACD,GAHD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBARF,CADF;;AAgBA,MAAMU,eAAe,GAAGC,KAAK,KAAK;AAChCT,EAAAA,SAAS,EAAEH,eAAe,CAACY,KAAD;AADM,CAAL,CAA7B;;AAIA,eAAeb,UAAU,CACvBH,OAAO,CAACe,eAAD,CAAP,CACGT,YADH,CADuB,CAAzB","sourcesContent":["import React from 'react';\nimport './CartDropdown.scss';\nimport { connect } from 'react-redux';\nimport CustomButton from '../CustomButton/CustomButton';\nimport CartItem from '../CartItem/CartItem';\nimport { withRouter } from 'react-router-dom';\nimport { selectCartItems } from '../../redux/cart/cart.selectors';\nimport { toggleCartHidden } from '../../redux/cart/cart.actions';\n\nconst CartDropdown = ({ cartItems, history, dispatch }) => (\n  <section className='cart-dropdown'>\n    <ul className='cart-items'>\n      {\n        cartItems.length\n          ? (cartItems.map(cartItem => (<CartItem key={cartItem.id} item={cartItem} />)))\n          : (<p className='empty-message'>Your cart is empty.</p>)\n      }\n    </ul>\n    <CustomButton onClick={() => {\n      history.push('/checkout')\n      dispatch(toggleCartHidden())\n    }}>Go to checkout</CustomButton>\n  </section>\n);\n\nconst mapStateToProps = state => ({\n  cartItems: selectCartItems(state)\n});\n\nexport default withRouter(\n  connect(mapStateToProps)\n    (CartDropdown));"]},"metadata":{},"sourceType":"module"}