{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/cbest/indeed/udemy/crown-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";function _templateObject4(){var data=_taggedTemplateLiteral([\"\\n  min-width: 165px;\\n  width: auto;\\n  height: 50px;\\n  letter-spacing: 0.5px;\\n  line-height: 50px;\\n  padding: 0 35px 0 35px;\\n  font-size: 15px;\\n  text-transform: uppercase;\\n  font-family: \\\"Open Sans Condensed\\\";\\n  font-weight: bolder;\\n  cursor: pointer;\\n  display: flex;\\n  justify-content: center;\\n\\n  \",\"\\n\"]);_templateObject4=function _templateObject4(){return data;};return data;}function _templateObject3(){var data=_taggedTemplateLiteral([\"\\n  background: #4285f4;\\n  color: #fff;\\n\\n  &:hover {\\n    background: #357ae8;\\n  }\\n\"]);_templateObject3=function _templateObject3(){return data;};return data;}function _templateObject2(){var data=_taggedTemplateLiteral([\"\\n  background: #fff;\\n  color: #000;\\n  border: 1px solid #000;\\n\\n  &:hover {\\n    background: #000;\\n    color: #fff;\\n    border-color: transparent;\\n  }\\n\"]);_templateObject2=function _templateObject2(){return data;};return data;}function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  border: 1px solid transparent;\\n  background-color: #000;\\n  color: white;\\n\\n  &:hover {\\n    background-color: white;\\n    color: #000;\\n    border-color: #000;\\n  }\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import styled,{css}from'styled-components';var getButtonStyles=function getButtonStyles(props){if(props.isGoogleSignIn){return googleSignInStyles;}return props.inverted?invertedButtonStyles:buttonStyles;};var buttonStyles=css(_templateObject());var invertedButtonStyles=css(_templateObject2());export var googleSignInStyles=css(_templateObject3());export var CustomButtonContainer=styled.button(_templateObject4(),getButtonStyles);","map":{"version":3,"sources":["/Users/cbest/indeed/udemy/crown-clothing/client/src/components/CustomButton/CustomButton.styles.jsx"],"names":["styled","css","getButtonStyles","props","isGoogleSignIn","googleSignInStyles","inverted","invertedButtonStyles","buttonStyles","CustomButtonContainer","button"],"mappings":"g8CAAA,MAAOA,CAAAA,MAAP,EAAiBC,GAAjB,KAA4B,mBAA5B,CAEA,GAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAAAC,KAAK,CAAI,CAC/B,GAAIA,KAAK,CAACC,cAAV,CAA0B,CACxB,MAAOC,CAAAA,kBAAP,CACD,CAED,MAAOF,CAAAA,KAAK,CAACG,QAAN,CAAiBC,oBAAjB,CAAwCC,YAA/C,CACD,CAND,CAQA,GAAMA,CAAAA,YAAY,CAAGP,GAAH,mBAAlB,CAYA,GAAMM,CAAAA,oBAAoB,CAAGN,GAAH,oBAA1B,CAYA,MAAO,IAAMI,CAAAA,kBAAkB,CAAGJ,GAAH,oBAAxB,CASP,MAAO,IAAMQ,CAAAA,qBAAqB,CAAGT,MAAM,CAACU,MAAV,oBAe9BR,eAf8B,CAA3B","sourcesContent":["import styled, { css } from 'styled-components';\n\nconst getButtonStyles = props => {\n  if (props.isGoogleSignIn) {\n    return googleSignInStyles;\n  }\n\n  return props.inverted ? invertedButtonStyles : buttonStyles;\n}\n\nconst buttonStyles = css`\n  border: 1px solid transparent;\n  background-color: #000;\n  color: white;\n\n  &:hover {\n    background-color: white;\n    color: #000;\n    border-color: #000;\n  }\n`;\n\nconst invertedButtonStyles = css`\n  background: #fff;\n  color: #000;\n  border: 1px solid #000;\n\n  &:hover {\n    background: #000;\n    color: #fff;\n    border-color: transparent;\n  }\n`;\n\nexport const googleSignInStyles = css`\n  background: #4285f4;\n  color: #fff;\n\n  &:hover {\n    background: #357ae8;\n  }\n`;\n\nexport const CustomButtonContainer = styled.button`\n  min-width: 165px;\n  width: auto;\n  height: 50px;\n  letter-spacing: 0.5px;\n  line-height: 50px;\n  padding: 0 35px 0 35px;\n  font-size: 15px;\n  text-transform: uppercase;\n  font-family: \"Open Sans Condensed\";\n  font-weight: bolder;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n\n  ${getButtonStyles}\n`;"]},"metadata":{},"sourceType":"module"}