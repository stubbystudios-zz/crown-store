{"ast":null,"code":"import _defineProperty from\"/Users/cbest/indeed/udemy/crown-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/cbest/indeed/udemy/crown-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Users/cbest/indeed/udemy/crown-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/cbest/indeed/udemy/crown-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/cbest/indeed/udemy/crown-clothing/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState}from'react';import'./SignIn.scss';import{connect}from'react-redux';import FormInput from'../FormInput/FormInput';import CustomButton from'../CustomButton/CustomButton';import{googleSignInStart as _googleSignInStart,emailSignInStart as _emailSignInStart}from'../../redux/user/user.actions';var SignIn=function SignIn(_ref){var emailSignInStart=_ref.emailSignInStart,googleSignInStart=_ref.googleSignInStart;var _useState=useState({email:'',password:''}),_useState2=_slicedToArray(_useState,2),signInCredentials=_useState2[0],setSignInCredentials=_useState2[1];var email=signInCredentials.email,password=signInCredentials.password;var handleSubmit=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(event){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:event.preventDefault();emailSignInStart(email,password);case 2:case\"end\":return _context.stop();}}},_callee);}));return function handleSubmit(_x){return _ref2.apply(this,arguments);};}();var handleChange=function handleChange(e){var _e$target=e.target,value=_e$target.value,name=_e$target.name;setSignInCredentials(_objectSpread(_objectSpread({},signInCredentials),{},_defineProperty({},name,value)));};return/*#__PURE__*/React.createElement(\"section\",{className:\"sign-in\"},/*#__PURE__*/React.createElement(\"h2\",null,\"I already have an account\"),/*#__PURE__*/React.createElement(\"p\",null,\"Sign in with your email and password\"),/*#__PURE__*/React.createElement(\"form\",{onSubmit:handleSubmit},/*#__PURE__*/React.createElement(FormInput,{name:\"email\",type:\"email\",label:\"Email\",value:email,handleChange:handleChange,required:true}),/*#__PURE__*/React.createElement(FormInput,{name:\"password\",type:\"password\",label:\"Password\",value:password,handleChange:handleChange,required:true}),/*#__PURE__*/React.createElement(\"footer\",{className:\"sign-in-footer\"},/*#__PURE__*/React.createElement(CustomButton,{type:\"submit\"},\"Sign in\"),/*#__PURE__*/React.createElement(CustomButton,{type:\"button\",onClick:googleSignInStart,isGoogleSignIn:true},\"Sign in with Google\"))));};var mapDispatchToProps=function mapDispatchToProps(dispatch){return{googleSignInStart:function googleSignInStart(){return dispatch(_googleSignInStart());},emailSignInStart:function emailSignInStart(email,password){return dispatch(_emailSignInStart({email:email,password:password}));}};};export default connect(null,mapDispatchToProps)(SignIn);","map":{"version":3,"sources":["/Users/cbest/indeed/udemy/crown-clothing/client/src/components/SignIn/SignIn.jsx"],"names":["React","useState","connect","FormInput","CustomButton","googleSignInStart","emailSignInStart","SignIn","email","password","signInCredentials","setSignInCredentials","handleSubmit","event","preventDefault","handleChange","e","target","value","name","mapDispatchToProps","dispatch"],"mappings":"4zBAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAO,eAAP,CACA,OAASC,OAAT,KAAwB,aAAxB,CACA,MAAOC,CAAAA,SAAP,KAAsB,wBAAtB,CACA,MAAOC,CAAAA,YAAP,KAAyB,8BAAzB,CACA,OACEC,iBAAiB,GAAjBA,CAAAA,kBADF,CAEEC,gBAAgB,GAAhBA,CAAAA,iBAFF,KAGO,+BAHP,CAKA,GAAMC,CAAAA,MAAM,CAAG,QAATA,CAAAA,MAAS,MAA6C,IAA1CD,CAAAA,gBAA0C,MAA1CA,gBAA0C,CAAxBD,iBAAwB,MAAxBA,iBAAwB,eACRJ,QAAQ,CAAC,CAAEO,KAAK,CAAE,EAAT,CAAaC,QAAQ,CAAE,EAAvB,CAAD,CADA,wCACnDC,iBADmD,eAChCC,oBADgC,kBAGlDH,CAAAA,KAHkD,CAG9BE,iBAH8B,CAGlDF,KAHkD,CAG3CC,QAH2C,CAG9BC,iBAH8B,CAG3CD,QAH2C,CAK1D,GAAMG,CAAAA,YAAY,2FAAG,iBAAMC,KAAN,kHACnBA,KAAK,CAACC,cAAN,GAEAR,gBAAgB,CAACE,KAAD,CAAQC,QAAR,CAAhB,CAHmB,sDAAH,kBAAZG,CAAAA,YAAY,6CAAlB,CAMA,GAAMG,CAAAA,YAAY,CAAG,QAAfA,CAAAA,YAAe,CAAAC,CAAC,CAAI,eACAA,CAAC,CAACC,MADF,CAChBC,KADgB,WAChBA,KADgB,CACTC,IADS,WACTA,IADS,CAGxBR,oBAAoB,gCAAMD,iBAAN,wBAA0BS,IAA1B,CAAiCD,KAAjC,GAApB,CACD,CAJD,CAMA,mBACE,+BAAS,SAAS,CAAC,SAAnB,eACE,0DADF,cAEE,oEAFF,cAIE,4BAAM,QAAQ,CAAEN,YAAhB,eACE,oBAAC,SAAD,EACE,IAAI,CAAC,OADP,CAEE,IAAI,CAAC,OAFP,CAGE,KAAK,CAAC,OAHR,CAIE,KAAK,CAAEJ,KAJT,CAKE,YAAY,CAAEO,YALhB,CAME,QAAQ,KANV,EADF,cASE,oBAAC,SAAD,EACE,IAAI,CAAC,UADP,CAEE,IAAI,CAAC,UAFP,CAGE,KAAK,CAAC,UAHR,CAIE,KAAK,CAAEN,QAJT,CAKE,YAAY,CAAEM,YALhB,CAME,QAAQ,KANV,EATF,cAiBE,8BAAQ,SAAS,CAAC,gBAAlB,eACE,oBAAC,YAAD,EAAc,IAAI,CAAC,QAAnB,YADF,cAEE,oBAAC,YAAD,EAAc,IAAI,CAAC,QAAnB,CAA4B,OAAO,CAAEV,iBAArC,CAAwD,cAAc,KAAtE,wBAFF,CAjBF,CAJF,CADF,CA+BD,CAhDD,CAkDA,GAAMe,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAAAC,QAAQ,QAAK,CACtChB,iBAAiB,CAAE,mCAAMgB,CAAAA,QAAQ,CAAChB,kBAAiB,EAAlB,CAAd,EADmB,CAEtCC,gBAAgB,CAAE,0BAACE,KAAD,CAAQC,QAAR,QAChBY,CAAAA,QAAQ,CAACf,iBAAgB,CAAC,CAAEE,KAAK,CAALA,KAAF,CAASC,QAAQ,CAARA,QAAT,CAAD,CAAjB,CADQ,EAFoB,CAAL,EAAnC,CAMA,cAAeP,CAAAA,OAAO,CACpB,IADoB,CAEpBkB,kBAFoB,CAAP,CAGbb,MAHa,CAAf","sourcesContent":["import React, { useState } from 'react';\nimport './SignIn.scss';\nimport { connect } from 'react-redux';\nimport FormInput from '../FormInput/FormInput';\nimport CustomButton from '../CustomButton/CustomButton';\nimport {\n  googleSignInStart,\n  emailSignInStart\n} from '../../redux/user/user.actions';\n\nconst SignIn = ({ emailSignInStart, googleSignInStart }) => {\n  const [signInCredentials, setSignInCredentials] = useState({ email: '', password: '' });\n\n  const { email, password } = signInCredentials;\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n\n    emailSignInStart(email, password);\n  }\n\n  const handleChange = e => {\n    const { value, name } = e.target;\n\n    setSignInCredentials({ ...signInCredentials, [name]: value });\n  }\n\n  return (\n    <section className='sign-in'>\n      <h2>I already have an account</h2>\n      <p>Sign in with your email and password</p>\n\n      <form onSubmit={handleSubmit}>\n        <FormInput\n          name='email'\n          type='email'\n          label='Email'\n          value={email}\n          handleChange={handleChange}\n          required\n        />\n        <FormInput\n          name='password'\n          type='password'\n          label='Password'\n          value={password}\n          handleChange={handleChange}\n          required\n        />\n        <footer className='sign-in-footer'>\n          <CustomButton type='submit'>Sign in</CustomButton>\n          <CustomButton type='button' onClick={googleSignInStart} isGoogleSignIn>\n            Sign in with Google\n            </CustomButton>\n        </footer>\n      </form>\n    </section>\n  );\n}\n\nconst mapDispatchToProps = dispatch => ({\n  googleSignInStart: () => dispatch(googleSignInStart()),\n  emailSignInStart: (email, password) =>\n    dispatch(emailSignInStart({ email, password }))\n});\n\nexport default connect(\n  null,\n  mapDispatchToProps\n)(SignIn);\n"]},"metadata":{},"sourceType":"module"}